#!/usr/bin/env ruby

begin
	require 'sploder'
	require 'trollop'
	require 'highline/import'
rescue LoadError
	require 'rubygems'
	require 'sploder'
	require 'trollop'
	require 'highline/import'
end

# This line is what prints the running message
puts "Main Sploder executable running."

opts = Trollop::options do
	opt :upload, "Upload a file to S3"
	opt :path, "   (Optional) A new or existing path within your S3 bucket to upload to", :type => :string
	opt :acl, "   (Optional) ACL permission setting for the file being uploaded. Default is public_read", :type => :string
	opt :setup, "Configure Sploder to work with your AWS account"
	opt :list, "List your S3 buckets"
	opt :explore, "Explore the contents of a bucket"
	opt :prefix, "   Object prefix", :type => :string
	opt :create, "Create a new bucket"
	opt :name, "    Name of bucket (Used in all functions that take bucket names)", :type => :string
	opt :delete, "Delete an existing bucket. WARNING: This deletes the entire contents of your bucket"

end

# Initialize the settings class to later check for .sploder file
settings = Sploder::Setup.new

case
when opts[:upload]
	settings.settings_exist # Check that Sploder has been set up
	upload = Sploder::Upload.new
	key 	= settings.load_settings['key']
	secret 	= settings.load_settings['secret']
	bucket 	= ARGV[0]
	file 	= ARGV[1]
	path 	= opts[:path]
	acl 	= opts[:acl]
	upload.run(bucket, file, path, acl, key, secret)
when opts[:setup]
	puts "Setup mode:"
	puts "Enter your AWS credentials in the prompts below. These will be saved so you will not need to run setup again."
	puts "If your credentials change in the future run 'sploder --setup' again to update them in Sploder."
	puts " "

	key 	= ask("Access key ID: ")
	secret 	= ask("Secret access key: ")

	setup = Sploder::Setup.new
	setup.run(key, secret)
when opts[:list]
	settings.settings_exist # Check that Sploder has been set up
	list = Sploder::List.new
	key 	= settings.load_settings['key']
	secret 	= settings.load_settings['secret']
	list.default(key, secret)
when opts[:explore]
	settings.settings_exist # Check that Sploder has been set up
	listobjects 	= Sploder::List.new
	key 		= settings.load_settings['key']
	secret 		= settings.load_settings['secret']
	listobjects.list_bucket(key, secret)
when opts[:create]
	settings.settings_exist # Check that Sploder has been set up
	unless opts[:name]
		puts "Please enter a name for your new bucket"
		exit 1
	end
	name = opts[:name]
	key 		= settings.load_settings['key']
	secret 		= settings.load_settings['secret']
	newbucket 	= Sploder::Bucket.new
	newbucket.create(name, key, secret)
when opts[:delete]
	settings.settings_exist # Check that Sploder has been set up
	bucket_name 	= ask("Enter the name of the bucket you want to delete: ")
	puts "WARNING: This will delete your bucket and all its contents."
	confirm 		= ask("Are you sure you want to continue? [y]/[n] ")
	unless confirm == 'y'
		puts "Cancelled bucket deletion. Phew, that was a close one!"
		exit 1
	end
	key 		= settings.load_settings['key']
	secret 		= settings.load_settings['secret']
	bucket 		= Sploder::Bucket.new
	bucket.delete(bucket_name, key, secret)
else
	puts "USAGE:"
	puts "Run setup and enter your AWS credentials before using:"
	puts "    sploder --setup OR sploder -s"
	puts " "
	puts "Upload a file:"
	puts "    sploder --upload <BUCKET_NAME> <FILE> (Optional: -p <PATH> -a <ACL_POLICY>)"
	puts " "
	puts "List available buckets:"
	puts "    sploder --list"
end
